// Mocks generated by Mockito 5.4.6 from annotations
// in on_time/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:on_time/database/database.dart' as _i2;
import 'package:on_time/services/points_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppDatabase_0 extends _i1.SmartFake implements _i2.AppDatabase {
  _FakeAppDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PointsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPointsService extends _i1.Mock implements _i3.PointsService {
  MockPointsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppDatabase get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDatabase_0(this, Invocation.getter(#db)),
          )
          as _i2.AppDatabase);

  @override
  _i4.Future<List<_i2.Ponto>> getPointsSession(DateTime? session) =>
      (super.noSuchMethod(
            Invocation.method(#getPointsSession, [session]),
            returnValue: _i4.Future<List<_i2.Ponto>>.value(<_i2.Ponto>[]),
          )
          as _i4.Future<List<_i2.Ponto>>);

  @override
  _i4.Future<_i2.Ponto?> getLastPointSession(DateTime? session) =>
      (super.noSuchMethod(
            Invocation.method(#getLastPointSession, [session]),
            returnValue: _i4.Future<_i2.Ponto?>.value(),
          )
          as _i4.Future<_i2.Ponto?>);

  @override
  _i4.Future<void> insertPoint(_i2.PontosCompanion? ponto) =>
      (super.noSuchMethod(
            Invocation.method(#insertPoint, [ponto]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
